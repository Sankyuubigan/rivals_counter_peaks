#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –±—ã—Å—Ç—Ä–æ–≥–æ –∑–∞–ø—É—Å–∫–∞ —Å–∞–º—ã—Ö –≤–∞–∂–Ω—ã—Ö –∏ –±—ã—Å—Ç—Ä—ã—Ö unit-—Ç–µ—Å—Ç–æ–≤.
–ü–æ–ª–µ–∑–µ–Ω –¥–ª—è –±—ã—Å—Ç—Ä–æ–π –ø—Ä–æ–≤–µ—Ä–∫–∏ —Ä–∞–±–æ—Ç–æ—Å–ø–æ—Å–æ–±–Ω–æ—Å—Ç–∏ –æ—Å–Ω–æ–≤–Ω–æ–π –ª–æ–≥–∏–∫–∏.
"""

import subprocess
import sys
from pathlib import Path

def main():
    """–ó–∞–ø—É—Å–∫–∞–µ—Ç –æ—Å–Ω–æ–≤–Ω—ã–µ unit-—Ç–µ—Å—Ç—ã."""
    print("üöÄ –ë—ã—Å—Ç—Ä—ã–π –∑–∞–ø—É—Å–∫ –∫–ª—é—á–µ–≤—ã—Ö —Ç–µ—Å—Ç–æ–≤...")
    
    project_root = Path(__file__).parent
    tests_path = project_root / 'tests' / 'test_logic.py'

    if not tests_path.exists():
        print(f"‚ùå –§–∞–π–ª —Å —Ç–µ—Å—Ç–∞–º–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω: {tests_path}")
        return False

    try:
        # –ó–∞–ø—É—Å–∫–∞–µ–º —Ç–æ–ª—å–∫–æ unit-—Ç–µ—Å—Ç—ã, –æ–Ω–∏ —Å–∞–º—ã–µ –±—ã—Å—Ç—Ä—ã–µ
        result = subprocess.run(
            [sys.executable, '-m', 'pytest', str(tests_path), '-m', 'not (gui or integration or slow)'],
            capture_output=True,
            text=True,
            timeout=60
        )
        
        print(result.stdout)

        if result.returncode == 0:
            print("\n‚úÖ –ë—ã—Å—Ç—Ä—ã–µ —Ç–µ—Å—Ç—ã –ø—Ä–æ—à–ª–∏ —É—Å–ø–µ—à–Ω–æ!")
            return True
        else:
            print("\n‚ùå –û–±–Ω–∞—Ä—É–∂–µ–Ω—ã –ø—Ä–æ–±–ª–µ–º—ã –≤ –±—ã—Å—Ç—Ä—ã—Ö —Ç–µ—Å—Ç–∞—Ö.")
            print(result.stderr)
            return False
            
    except subprocess.TimeoutExpired:
        print("‚è∞ –¢–µ—Å—Ç—ã –Ω–µ –∑–∞–≤–µ—Ä—à–∏–ª–∏—Å—å –∑–∞ 60 —Å–µ–∫—É–Ω–¥.")
        return False
    except Exception as e:
        print(f"üí• –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ —Ç–µ—Å—Ç–æ–≤: {e}")
        return False

if __name__ == "__main__":
    success = main()
    sys.exit(0 if success else 1)
